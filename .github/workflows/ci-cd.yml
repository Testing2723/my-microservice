name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
permissions:
  actions: read
  security-events: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: install depedencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: linting
        run: flake8 app.py --ignore=E302,E305
      - name: run tests
        uses: pavelzw/pytest-action@v2
        with:
          custom-arguments: tests/
          job-summary: false
          emoji: false
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker Image_name
        run: docker build -t ${{secrets.DOCKERHUB_USERNAME }}/myappjai:latest .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/myappjai:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: 0
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      - name: push docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/myappjai:latest
      - name: ssh and deploy on VM 
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USER }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/myappjai:latest
            docker stop myappjai || true
            docker rm myappjai || true
            docker run -d -name myapp -p 80:8000 ${{ secrets.DOCKERHUB_USERNAME }}/myappjai:latest
